{"version":3,"sources":["SignIn.js","SignInAnimal.js","Match.js","AuctionAlgorithm.js","App.js","index.js"],"names":["StyledRating","withStyles","iconFilled","color","iconHover","Rating","useStyles","makeStyles","theme","root","margin","spacing","width","SignIn","animals","handlePeople","useState","name","setName","age","setAge","interest","setInterest","classes","className","Grid","item","xs","noValidate","autoComplete","TextField","label","variant","value","onChange","event","target","Box","component","mb","borderColor","Typography","map","animal","index","id","key","description","max","precision","icon","fontSize","aux","parentElement","console","log","handleInterest","Button","onClick","SingInAnimal","handleAnimals","setAnimal","specie","setSpecie","setDescription","padding","flexGrow","paper","textAlign","palette","text","secondary","minWidth","bullet","display","transform","title","pos","marginBottom","colorAnimalName","float","AuctionAlgorithm","people","initialPrice","attribution","interests","forEach","push","length","includes","i","maior","Math","apply","indexMaior","indexOf","y","precoAux","found","find","indexFound","splice","results","j","result","Card","CardContent","gutterBottom","fab","menuButton","marginRight","appBar","background","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","App","open","setOpen","setAnimals","setPeople","currentScreen","setCurrentScreen","home","CardActionArea","addAnimal","SignInAnimal","addPerson","AppBar","Toolbar","IconButton","edge","aria-label","container","alignContent","direction","Collapse","in","Alert","severity","action","size","ButtonGroup","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75350a1b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"typeface-roboto\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n\r\nconst StyledRating = withStyles({\r\n  iconFilled: {\r\n    color: \"#ff6d75\",\r\n  },\r\n  iconHover: {\r\n    color: \"#ff3d47\",\r\n  },\r\n})(Rating);\r\n\r\nconst SignIn = ({ animals, handlePeople }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [interest, setInterest] = useState([0, 0, 0]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleInterest = (value, event) => {\r\n    let aux = [...interest];\r\n    let index = event.target.parentElement.parentElement.parentElement.id;\r\n    aux[index] = value;\r\n    setInterest(aux);\r\n    console.log(interest);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    handlePeople(name, age, interest);\r\n    setName(\"\");\r\n    setAge(\"\");\r\n    setInterest([0, 0, 0]);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid item xs>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField\r\n            label=\"Nome\"\r\n            variant=\"outlined\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Idade\"\r\n            value={age}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setAge(event.target.value)}\r\n          />\r\n        </form>\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n          <Typography variant=\"h6\" component=\"legend\">Avaliação</Typography>\r\n          <Typography component=\"legend\">\r\n            Agora é hora de você avaliar cada animal. Lembre-se de levar em consideração coisas como: Você passa muito tempo em casa? Você tem condições de arcar com despesas financeiras? Pode passear com o bichinho? É necessário fazer uma boa escolha para que ambas as partes sejam felizes! :)\r\n          </Typography>    \r\n        </Box>\r\n        {animals.map((animal, index) => {\r\n          return (\r\n            <div id={index} key={index}>\r\n              <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                <Typography variant=\"h6\" component=\"legend\">\r\n                  {animal.animal}\r\n                </Typography>\r\n                <Typography component=\"legend\">{animal.description}</Typography>\r\n                <StyledRating\r\n                  name={animal.animal}\r\n                  max={10}\r\n                  precision={1}\r\n                  icon={<FavoriteIcon fontSize=\"inherit\" />}\r\n                  onChange={(event, value) => handleInterest(value, event)}\r\n                  value={interest[index]}\r\n                />\r\n              </Box>\r\n            </div>\r\n          );\r\n        })}\r\n        <Button\r\n          onClick={() => handleSend()}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          Enviar\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default SignIn;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport 'typeface-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst SingInAnimal = ({handleAnimals}) => {\r\n\r\n    const [animal, setAnimal] = useState(\"\");\r\n    const [specie, setSpecie] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid item xs>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n              <TextField label=\"Nome\" variant=\"outlined\" onChange={event => setAnimal(event.target.value)}/>\r\n              <TextField label=\"Especie\" variant=\"outlined\" onChange={event => setSpecie(event.target.value)}/>\r\n              <TextField label=\"Descrição\" variant=\"outlined\" onChange={event => setDescription(event.target.value)}/>\r\n          </form>\r\n          <Button onClick={() => handleAnimals(animal, specie, description)} variant=\"contained\" color=\"secondary\">\r\n            Enviar\r\n          </Button>\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '50ch',\r\n      },\r\n    },\r\n  }));\r\n  \r\n  export default SingInAnimal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst SingIn = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    padding:{\r\n        padding: '20px',\r\n    },\r\n    root: {\r\n        padding: '20px',\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n  \r\n  export default SingIn;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst AuctionAlgorithm = ({people, animals}) => {\r\n\r\n    // const animals = [\r\n    //     {\r\n    //         animal: \"selma\",\r\n    //         specie: \"gato\",\r\n    //     },\r\n    //     {\r\n    //         animal: \"cora\",\r\n    //         specie: \"cachorro\",\r\n    //     },\r\n    //     {\r\n    //         animal: \"nida\",\r\n    //         specie: \"gato\",\r\n    //     },\r\n    //     {\r\n    //         animal: \"preta\",\r\n    //         specie: \"gato\",\r\n    //     }\r\n    // ];\r\n\r\n    const epislon = 0.2;\r\n    // const people = [\r\n    //     {\r\n    //         name: \"pedro\",\r\n    //         interest: [-5,-3,-3,-3],\r\n    //     },\r\n    //     {\r\n    //         name: \"maria\",\r\n    //         interest: [-5,-3,-3,-3],\r\n    //     },\r\n    //     {\r\n    //         name: \"alice\",\r\n    //         interest: [-5,-7,-7,-7],\r\n    //     },\r\n    //     {\r\n    //         name: \"ronaldo\",\r\n    //         interest: [-5,-7,-7,-7],\r\n    //     }\r\n    // ];\r\n\r\n\r\n    \r\n    const initialPrice = []; // array que será usado para armazenar os preços iniciais.\r\n    const attribution = []; // array utilizado para atribuir a pessoa ao objeto (sendo o objeto a posição no array).\r\n    const interests = []; // array que administra se todos as pessoas foram alocadas a um objeto.\r\n\r\n    // inicialização dos array de acordo com o tanto de pessoas.\r\n    people.forEach(item => {\r\n        initialPrice.push(0);\r\n        attribution.push(\"\");\r\n    });\r\n\r\n    // enquanto todas as pessoas não forem atribuídas continua o algoritmo\r\n    while(interests.length < people.length){\r\n        people.forEach((item) => {\r\n\r\n            console.log(interests.includes(item));\r\n            // se a pessoa ainda não foi inserida no array interests continua\r\n            if (!interests.includes(item)) {\r\n                let aux = [...item.interest];\r\n            \r\n                for (let i = 0; i < aux.length; i++) {\r\n                    aux[i] = aux[i] - initialPrice[i];\r\n                }\r\n                \r\n                const maior = Math.max.apply(null, aux);\r\n                const indexMaior = aux.indexOf(maior);\r\n                \r\n                aux[indexMaior] = -10000000;\r\n                \r\n                const segMaior = Math.max.apply(null, aux);\r\n                \r\n                const y = maior - segMaior + epislon;\r\n\r\n                const precoAux = initialPrice[indexMaior] + y;\r\n\r\n                if (precoAux > initialPrice[indexMaior]) {\r\n                    initialPrice[indexMaior] = precoAux;\r\n                    \r\n                    if(attribution[indexMaior] === \"\"){\r\n                        attribution[indexMaior] = item.name;\r\n                    }else{\r\n                        const found = interests.find(item => item.name === attribution[indexMaior])\r\n                        const indexFound = interests.indexOf(found);\r\n                        interests.splice(indexFound, 1);\r\n                        attribution[indexMaior] = item.name;\r\n                    }\r\n                    interests.push(item); \r\n                } \r\n            }\r\n\r\n            console.log(initialPrice);\r\n\r\n        });\r\n\r\n    };\r\n\r\n    const results = [];\r\n    for (let i = 0; i < attribution.length; i++) {\r\n        for (let j = 0; j < interests.length; j++) {\r\n            if (interests[j].name === attribution[i]) {\r\n                results.push(interests[j])\r\n            }  \r\n        }   \r\n    }\r\n\r\n    console.log(results);\r\n\r\n    const classes = useStyles();\r\n\r\n    return results.map((result, index) => (\r\n        <div key={index}>\r\n            <Card className={classes.pos} > \r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    Achamos um amigo para você :) \r\n                    <LoyaltyIcon className={classes.icon}/>\r\n                    </Typography>\r\n                    <Typography className={classes.colorAnimalName} variant=\"h5\" component=\"h2\">\r\n                    Nome do bichinho: {animals[index].animal}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                    espécie: {animals[index].specie}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                    Nome do dono: {result.name}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>    \r\n        </div>)\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    colorAnimalName: {\r\n       color: '#011936',\r\n    },\r\n    icon: {\r\n        float: 'right',\r\n        color: '#ED254E'\r\n    }    \r\n  });\r\n\r\nexport default AuctionAlgorithm;","import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport PetsIcon from \"@material-ui/icons/Pets\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Fab from \"@material-ui/core/Fab\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\n\nimport SignIn from \"./SignIn\";\nimport SignInAnimal from \"./SignInAnimal\";\nimport Match from \"./Match\";\nimport AuC from \"./AuctionAlgorithm\";\n\nconst App = () => {\n  const [open, setOpen] = useState(false);\n\n  // dados dos animais\n  const [animals, setAnimals] = useState([\n    {\n\n      animal: \"Selma\",\n      specie: \"Gato\",\n      description: \"Um gato quieto, que necessita de bastante atenção do dono.\",\n    },\n    {\n\n      animal: \"Cora\",\n      specie: \"Cachorro\",\n      description: \"Um cachorro quieto, muito obediente. Necessita passear pelo menos duas vezes ao dia.\",\n    },\n    {\n\n      animal: \"Nida\",\n      specie: \"Gato\",\n      description: \"Um gato quieto, que não se importa de ficar grandes períodos sozinho. Necessita de cuidados com a saúde.\",\n    },\n  ]);\n\n  const handleAnimals = (animal, specie, description) => {\n    let aux = [...animals];\n    aux.push({ animal, specie, description });\n    setAnimals(aux);\n    console.log(animals);\n  };\n\n  // dados de pessoas\n  const [people, setPeople] = useState([]);\n\n  const handlePeople = (name, age, interest) => {\n    let aux = [...people];\n    aux.push({ name, age, interest });\n    setPeople(aux);\n  };\n\n  // tratar páginas\n  const [currentScreen, setCurrentScreen] = useState(\"home\");\n  const classes = useStyles();\n\n  const home = (\n    <div>\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Seja bem vindo! ;)\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Essa aplicação foi feita para ajudar pessoas a encontrarem seus animais de estimação através da utilização do Algoritmo do Leilão.\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            A idea principal seria cadastrar os animais que estão disponíveis para adoção e depois deisponibilizar a aplicação para que pessoas se cadastrem. Cada casdastro pede informações sobre o dono e pede para que ele avalie seu nível de interesse em cada animal disponível para adoção.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n    </div>\n  );\n\n  const addAnimal = <SignInAnimal handleAnimals={handleAnimals} />;\n\n  const addPerson = <SignIn handlePeople={handlePeople} animals={animals} />;\n\n  const algorith = <SignIn handlePeople={handlePeople} />;\n\n  const handleAddPerson = () => {\n    setCurrentScreen(\"addPerson\");\n  };\n\n  const handleAddAnimal = () => {\n    setCurrentScreen(\"addAnimal\");\n  };\n\n  const handleHome = () => {\n    setCurrentScreen(\"home\");\n  };\n\n  const handleAlgorith = () => {\n    if (animals.length === people.length && animals.length != 0) {\n      setCurrentScreen(\"algorith\");\n    } else {\n      setOpen(true);\n    }\n  };\n\n  return (\n    <div>\n      <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <PetsIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            amigo estou aqui\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Grid container alignContent=\"center\" direction=\"row\">\n        <Grid item xs>\n          {currentScreen === \"home\" ? (\n            home\n          ) : currentScreen === \"addPerson\" ? (\n            addPerson\n          ) : currentScreen === \"addAnimal\" ? (\n            addAnimal\n          ) : (\n            <AuC people={people} animals={animals}/>\n          )}\n        </Grid>\n        <Grid container spacing={1} alignContent=\"center\" direction=\"row\">\n          <div className={classes.root}>\n            <Collapse in={open}>\n              <Alert\n                severity=\"error\"\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n              >\n                O número de pessoas e de animais é diferente :(\n              </Alert>\n            </Collapse>\n            <ButtonGroup\n              variant=\"contained\"\n              color=\"secondary\"\n              aria-label=\"contained primary button group\"\n            >\n              <Button\n                onClick={() => handleHome()}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Home\n              </Button>\n              <Button\n                onClick={() => handleAddAnimal()}\n                variant=\"contained\"\n                color=\"secondary\"\n              disabled>\n                ADD Animal\n              </Button>\n              <Button\n                onClick={() => handleAddPerson()}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                ADD Pessoa\n              </Button>\n              <Button\n                onClick={() => handleAlgorith()}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Resultado da Busca\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: '10px',\n  },\n  fab: {\n    float: \"right\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  appBar: {\n    background: \"#EF6461\",\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />,  document.getElementById('root')\n);"],"sourceRoot":""}